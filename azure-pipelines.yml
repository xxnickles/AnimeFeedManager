# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'a5dfc76c-c47a-4b8b-81d7-82e241224502'
  # Agent VM image name
  vmImageName: 'windows-latest'

jobs:
  # Build the python packages in a virtual env
  - job: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UseDotNet@2
      displayName: "SDK Install"
      inputs:
        version: '3.1.x'
        performMultiLevelLookup: true
    - script: |
        dotnet restore
        dotnet build --configuration Release
    - task: DotNetCoreCLI@2
      displayName: "Tests"
      inputs:
        command: 'test'
        arguments: '--configuration Release'
        projects: '**/*.Test.csproj'
        testRunTitle: 'Unit Test'
    - task: DotNetCoreCLI@2
      displayName: "Publish"
      inputs:
        command: publish
        arguments: '--configuration Release --output $(System.DefaultWorkingDirectory)/publish_output'
        projects: '**/*.Functions.csproj'
        publishWebProjects: false
        modifyOutputPath: false
        zipAfterPublish: false
    - task: ArchiveFiles@2
      displayName: "Archive files"
      inputs:
        rootFolderOrFile: "$(System.DefaultWorkingDirectory)/publish_output"
        includeRootFolder: false
        archiveFile: "$(System.DefaultWorkingDirectory)/build$(Build.BuildId)-functions.zip"
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(System.DefaultWorkingDirectory)/build$(Build.BuildId)-functions.zip'
        name: 'drop'