@if (ControlData is not null)
{
    <WithMessage Message="@Message" DomainError="@DomainError">
        <Content>
            <div class="flex flex-nowrap items-center justify-between">
                <div class="flex gap-2">
                    <div class="tooltip tooltip-accent" data-tip="Subscribed">
                        <div class="badge badge-accent"></div>
                    </div>
                    <LinksPresenter Links="@Links"></LinksPresenter>
                </div>


                <form hx-post="movies/unsubscribe"
                      hx-swap="outerHTML"
                      hx-indicator="@ControlData.LoaderSelector"
                      hx-confirm="@($"Do you want to stop notifications for {ControlData.Title}?")">
                    <AntiforgeryToken/>
                    <fieldset>
                        <input type="hidden" name="@nameof(MovieControlData.Title)" @bind="ControlData.Title"/>
                        <input type="hidden" name="@nameof(MovieControlData.UserId)" @bind="ControlData.UserId"/>
                        <input type="hidden" name="@nameof(MovieControlData.NotificationTime)" @bind="ControlData.NotificationTime"/>
                        <input type="hidden" name="@nameof(MovieControlData.LoaderSelector)" @bind="ControlData.LoaderSelector"/>
                        <button type="submit" class="btn btn-secondary btn-xs">Remove from Notifications</button>
                    </fieldset>
                </form>
            </div>
        </Content>
    </WithMessage>
}

@code {

    [Parameter, EditorRequired] public MovieControlData? ControlData { get; set; }
    [Parameter] public string Message { get; set; } = string.Empty;
    [Parameter] public DomainError? DomainError { get; set; }
    [Parameter, EditorRequired] public SeriesFeedLinks[] Links { get; set; } = [];
}