@page "/{Season}/tv"

@using AnimeFeedManager.Features.Tv.Library
@inject TvLibraryGetter LibraryGetter;
@inject ILogger<TvGrid> Logger;
@* @attribute [StreamRendering] *@

<SeriesGrid Series="_seasonCollection.Animes" SeriesType="SeriesType.Tv"></SeriesGrid>

@code {

    [CascadingParameter] public HttpContext context { get; set; } = default!;

    [Parameter] public string Season { get; set; } = string.Empty;

    private SeasonInformation _selectedSeason = new DefaultSeasonInformation();

    private SeasonCollection _seasonCollection = new EmptySeasonCollection();

    protected override async Task OnInitializedAsync()
    {
        _selectedSeason = SeasonValidators.Parse(Season)
            .Match(
                values => new SeasonInformation(values.season, values.year),
                _ => new DefaultSeasonInformation()
            );


        var results = await LibraryGetter.GetForSeason(_selectedSeason.Season, _selectedSeason.Year).LogErrors(Logger);
        _seasonCollection = results.Match(
            collection => collection,
            _ => new EmptySeasonCollection()
        );
    }

}