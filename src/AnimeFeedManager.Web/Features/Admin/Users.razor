@using AnimeFeedManager.Common.Domain
<div class="flex flex-wrap gap-3">
    <AdminCard Title="Copy Subscriptions" LoaderId="@_copyUserLoader">
        <form class="card-actions form-control"
              hx-put="/admin/user/copy"
              hx-swap="none"
              hx-indicator="@($"#{_copyUserLoader}")"
              :hx-confirm="confirmationMessage"
              x-data="{ source:'', target:'', 
                       get confirmationMessage() { return `Do you want to copy series from ${this.source} to ${this.target}?`}
                      }">
            <AntiforgeryToken/>

            <fieldset class="form-control w-full">
                <label class="label" for="copy-source-id">
                    <span class="label-text">Source User Id</span>
                </label>
                <input name="source"
                       id="copy-source-id"
                       type="text"
                       class="input input-bordered w-full invalid:input-error required:!input-bordered"
                       placeholder="Source User Id"
                       required
                       x-model="source"/>
                <label class="label" for="copy-target-id">
                    <span class="label-text">Target User Id</span>
                </label>
                <input name="target"
                       type="text"
                       id="copy-target-id"
                       class="input input-bordered w-full invalid:input-error required:!input-bordered"
                       placeholder="Target User Id"
                       required
                       x-model="target"/>
            </fieldset>
            <button type="submit" class="btn btn-primary mt-4">
                Copy Subscriptions
            </button>

        </form>
    </AdminCard>

    <AdminCard Title="Delete User" LoaderId="@_deleteUserLoader">
        <form class="card-actions form-control"
              hx-put="/admin/user/delete"
              hx-swap="none"
              hx-indicator="@($"#{_deleteUserLoader}")"
              :hx-confirm="confirmationMessage"
              x-data="{ source:'', 
                        get confirmationMessage() { return `Do you want to delete ${this.source} and its associated data?`}
                       }">
            <AntiforgeryToken/>
            <label class="label" for="delete-source-id">
                <span class="label-text">Source User Id</span>
            </label>
            <input name="source"
                   id="delete-source-id"
                   type="text"
                   class="input input-bordered invalid:input-error required:!input-bordered w-full"
                   placeholder="Source User Id"
                   required
                   x-model="source"/>
            <button type="submit" class="btn btn-error mt-4">
                Delete User
            </button>
        </form>
    </AdminCard>
</div>

@code
{
    private readonly string _copyUserLoader = IdHelpers.GetUniqueName("admin-card-loader");
    private readonly string _deleteUserLoader = IdHelpers.GetUniqueName("admin-card-loader");
}