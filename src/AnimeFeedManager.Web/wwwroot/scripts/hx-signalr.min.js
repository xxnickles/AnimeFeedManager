(function(){var api;var signalRConnect="signalr-connect";var signalRSubscribe="signalr-subscribe";var signalRSend="signalr-send";htmx.defineExtension("signalr",{init:function(apiRef){api=apiRef;if(htmx.createHubConnection==undefined){htmx.createHubConnection=createHubConnection}},onEvent:function(name,evt){var parent=evt.target??evt.detail.elt;switch(name){case"htmx:beforeCleanupElement":var internalData=api.getInternalData(parent);if(internalData.HubConnection!=undefined){internalData.HubConnection.stop()}return;case"htmx:beforeProcessNode":forEach(queryAttributeOnThisOrChildren(parent,signalRConnect),function(child){ensureHubConnection(child)});forEach(queryAttributeOnThisOrChildren(parent,signalRSubscribe),function(child){ensureSubscription(child)});forEach(queryAttributeOnThisOrChildren(parent,signalRSend),function(child){ensureSending(child)})}}});function ensureHubConnection(hubElt){if(!api.bodyContains(hubElt)){return}if(!signalR){logError("SignalR object not found. Make sure to include SignalR script in the page scripts before this extension.");return}var signalrHubUrl=api.getAttributeValue(hubElt,signalRConnect);var hubConnection=htmx.createHubConnection(signalrHubUrl);hubConnection.onreconnecting(function(error){api.triggerEvent(hubElt,"htmx:signalr:reconnecting",{error:error})});hubConnection.onreconnected(function(connectionId){api.triggerEvent(hubElt,"htmx:signalr:reconnected",{connectionId:connectionId})});hubConnection.onclose(function(error){api.triggerEvent(hubElt,"htmx:signalr:close",{error:error})});hubConnection.start().then(function(){api.triggerEvent(hubElt,"htmx:signalr:start",{connectionId:hubConnection.connectionId})});api.getInternalData(hubElt).HubConnection=hubConnection}function ensureSending(elt){if(!api.bodyContains(elt)){return}if(!signalR){logError("SignalR object not found. Make sure to include SignalR script in the page scripts before this extension.");return}var hubElement=findParentWithHubConnection(elt);if(!hubElement){return}processHubConnectionSend(hubElement,elt)}function ensureSubscription(elt){if(!api.bodyContains(elt)){return}if(!signalR){logError("SignalR object not found. Make sure to include SignalR script in the page scripts before this extension.");return}var hubElement=findParentWithHubConnection(elt);if(!hubElement){return}var hubConnection=api.getInternalData(hubElement).HubConnection;var signalrSubscribeAttribute=api.getAttributeValue(elt,signalRSubscribe);var signalrMethodNames=signalrSubscribeAttribute.split(",");for(let i=0;i<signalrMethodNames.length;i++){var method=signalrMethodNames[i].trim();hubConnection.on(method,function handler(message){if(maybeCloseHubConnectionSource(hubElement)){hubConnection.off(method,handler);return}if(maybeUnsubscribe(hubElement,method,elt,handler)){return}var target=api.getTarget(elt);var messageSpec={message:message,method:method,target:target};if(!api.triggerEvent(elt,"htmx:signalr:message",messageSpec)){return}if(typeof messageSpec.message==="object"){messageSpec.message=JSON.stringify(messageSpec.message)}api.withExtensions(elt,function(extension){messageSpec.message=extension.transformResponse(messageSpec.message,null,elt)});if(messageSpec.message===null||messageSpec.message===undefined){return}var swapSpec=api.getSwapSpecification(elt);api.swap(messageSpec.target,messageSpec.message,swapSpec)})}}function processHubConnectionSend(hubElt,sendElt){var nodeData=api.getInternalData(sendElt);var triggerSpecs=api.getTriggerSpecs(sendElt);triggerSpecs.forEach(function(ts){api.addTriggerHandler(sendElt,ts,nodeData,function(elt,evt){var HubConnection=api.getInternalData(hubElt).HubConnection;var method=api.getAttributeValue(sendElt,signalRSend);var headers=api.getHeaders(sendElt,hubElt);var results=api.getInputValues(sendElt,"post");var errors=results.errors;var rawParameters=Object.assign({},results.values);var expressionVars=api.getExpressionVars(sendElt);var allParameters=api.mergeObjects(rawParameters,expressionVars);var filteredParameters=api.filterValues(allParameters,sendElt);filteredParameters["HEADERS"]=headers;if(errors&&errors.length>0){api.triggerEvent(sendElt,"htmx:validation:halted",errors);return}if(!api.triggerEvent(sendElt,"htmx:signalr:beforeSend",{method:method,headers:headers,allParameters:allParameters,filteredParameters:filteredParameters})){return}HubConnection.send(method,filteredParameters);if(api.shouldCancel(evt,sendElt)){evt.preventDefault()}api.triggerEvent(sendElt,"htmx:signalr:afterSend",{method:method,message:filteredParameters})})})}function maybeCloseHubConnectionSource(elt){if(!api.bodyContains(elt)){api.getInternalData(elt).HubConnection.stop();return true}return false}function maybeUnsubscribe(hubElement,subscription,elt,handler){if(!api.bodyContains(elt)){api.getInternalData(hubElement).HubConnection.off(subscription,handler);return true}if(api.getAttributeValue(elt,signalRSubscribe).split(",").indexOf(subscription)==-1){api.getInternalData(hubElement).HubConnection.off(subscription,handler);return true}return false}function createHubConnection(url){return(new signalR.HubConnectionBuilder).withUrl(url).withAutomaticReconnect().build()}function queryAttributeOnThisOrChildren(elt,attributeName){var result=[];if(api.hasAttribute(elt,attributeName)){result.push(elt)}elt.querySelectorAll("["+attributeName+"], [data-"+attributeName+"]").forEach(function(node){result.push(node)});return result}function findParentWithHubConnection(elt){var match=api.getClosestMatch(elt,hasHubConnection);return match}function hasHubConnection(node){var internalData=api.getInternalData(node);return internalData.HubConnection!=null}function forEach(arr,func){if(arr){for(var i=0;i<arr.length;i++){func(arr[i])}}}})();