@using AnimeFeedManager.WebApp.State
@using AnimeFeedManager.WebApp.Components.Common
@inject ApplicationState State

@implements IDisposable
<MudCard>
    <MudCardMedia Image="@Anime.Url" Height="250" Title="@Anime.Title"/>
    <div>
        <MudCardContent>
            <MudText Typo="Typo.h2">@Anime.Title</MudText>
            @if (!string.IsNullOrEmpty(@Anime.Synopsis))
            {
                <MudText Typo="Typo.body2">@Anime.Synopsis</MudText>
            }
            else
            {
                <MudText Typo="Typo.body2" Color="Color.Warning">Synopsis Not Available</MudText>
            }

        </MudCardContent>
    </div>
    <MudCardActions Class="d-flex">
        <MudChip Label="true" Color="Color.Warning">Comming Soon</MudChip>
        <MudSpacer></MudSpacer>
    </MudCardActions>
</MudCard>

@code {

    [CascadingParameter]
    private Error? Error { get; set; }

    [Parameter]
    public SimpleAnime Anime { get; set; } = new(string.Empty, string.Empty, string.Empty, string.Empty);

    protected override void OnInitialized()
    {
        State.OnStateChange += StateHasChanged;
    }

    public void Dispose()
    {
        State.OnStateChange -= StateHasChanged;
    }

}